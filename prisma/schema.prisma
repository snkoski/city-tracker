generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PlaceType {
  BREWERY
  RESTAURANT
  MUSIC_VENUE
  MUSEUM
  COWORKING
  AIRPORT
}

model State {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  incomeTaxRate Decimal? @map("income_tax_rate")
  population    Int?
  cities        City[]
}

model City {
  id               Int              @id @default(autoincrement())
  name             String
  stateId          Int              @map("state_id")
  population       Int?
  salesTaxRate     Decimal?         @map("sales_tax_rate")
  subreddit        String?
  naturalDisasters String?          @map("natural_disasters")
  crimeRate        Decimal?         @map("crime_rate")
  walkabilityScore Int?             @map("walkability_score")
  notes            String?
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")
  events           Event[]
  monthlyWeather   MonthlyWeather[]
  places           Place[]
  state            State            @relation(fields: [stateId], references: [id])
  neighborhoods    Neighborhood[]

  @@map("cities")
}

model Neighborhood {
  id               Int      @id @default(autoincrement())
  name             String
  cityId           Int      @map("city_id")
  population       Int?
  area             Float?
  description      String?
  walkabilityScore Int?     @map("walkability_score")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  places           Place[]
  city             City     @relation(fields: [cityId], references: [id])

  @@map("neighborhoods")
}

model MonthlyWeather {
  id              Int     @id @default(autoincrement())
  cityId          Int     @map("city_id")
  month           Int
  avgHighTempF    Decimal @map("avg_high_temp_f")
  avgLowTempF     Decimal @map("avg_low_temp_f")
  avgTempF        Decimal @map("avg_temp_f")
  avgRainfallInch Decimal @map("avgrainfall_inch")
  city            City    @relation(fields: [cityId], references: [id])

  @@unique([cityId, month])
}

model Place {
  id             Int           @id @default(autoincrement())
  cityId         Int           @map("city_id")
  name           String
  type           PlaceType
  neighborhoodId Int?          @map("neighborhood_id")
  address        String
  website        String?
  description    String?
  events         Event[]
  city           City          @relation(fields: [cityId], references: [id])
  neighborhood   Neighborhood? @relation(fields: [neighborhoodId], references: [id])
}

model Event {
  id        Int       @id @default(autoincrement())
  cityID    Int?      @map("city_id")
  placeId   Int?      @map("place_id")
  name      String
  date      DateTime
  startTime DateTime? @map("start_time")
  endTime   DateTime? @map("end_time")
  details   String?
  website   String?
  ticketUrl String?   @map("ticket_url")
  city      City?     @relation(fields: [cityID], references: [id])
  place     Place?    @relation(fields: [placeId], references: [id])
}
